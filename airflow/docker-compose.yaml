version: '3.8'

services:
  mysql:
      image: mysql:8.0
      container_name: airflow_mysql
      environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
      restart: always
      ports:
        - "3306:3306"  # MySQL 포트
      networks:
        - airflow_network
      command: --default-authentication-plugin=mysql_native_password
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
        interval: 10s
        retries: 5
        start_period: 10s
      volumes:
        - mysql_data:/mysql  # MySQL 데이터 저장
        - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh  # ✅ 환경 변수 기반 초기화 스크립트


  airflow-webserver:
    image: apache/airflow:latest
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - ../.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
    ports:
      - "8080:8080" # airflow 포트 (기본값 : 8080)a

    restart: always
    volumes:
      - ./airflow.cfg:/airflow.cfg  # ⬅️ airflow.cfg 적용
      - ./airflow/logs:/logs
      - ./airflow/dags:/dags
      - ./entrypoint.sh:/entrypoint.sh

    entrypoint: ["/bin/bash", "/entrypoint.sh"]
    networks:
      - airflow_network

  nginx:
    image: nginx:latest
    container_name: airflow_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"  # 외부 노출 포트
    depends_on:
      - airflow-webserver
    networks:
      - airflow_network

networks:
  airflow_network:
    driver: bridge

volumes:
  mysql_data:  # MySQL 데이터 저장 볼륨
